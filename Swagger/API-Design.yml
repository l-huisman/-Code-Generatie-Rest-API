openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/684651_1/Mr.Banky/1.0.0
info:
  description: This is a simple API
  version: "1.0.0"
  title: Simple Inventory API
  contact:
    email: you@your-company.com
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
tags:
  - name: User
    description: Operations about user
  - name: Transaction
    description: Operations about transaction
security:
  - bearerAuth: [ ]
paths:
  /login:
    post:
      tags:
        - User
      summary: Login a user
      description: Login a user
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        "200":
          description: User logged in
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: "Boolean indicating if the request was successful"
                    example: true
                  message:
                    type: string
                    description: "Message returned from the request"
                    example: "User successfully logged in"
              examples:
                success:
                  summary: "Successful response"
                  value:
                    success: true
                    message: "User successfully logged in"
                    data:
                      type: object
                      description: "Data returned from the request"
                      example:
                        user:
                          id: 1
                          firstName: "John"
                          lastName: "Doe"
                          username: "JohnDoe"
                          email: "johndoe@example.com"
                          userType: "USER"
                error:
                  summary: "Error response"
                  value:
                    success: false
                    message: "Invalid request parameters"
                    data: null
        "404":
            description: User not found
            content:
                application/json:
                schema:
                    type: object
                    properties:
                    success:
                        type: boolean
                        description: "Boolean indicating if the request was successful"
                        example: false
                    message:
                        type: string
                        description: "Message returned from the request"
                        example: "User not found"
                    data:
                        type: object
                        description: "Data returned from the request"
                        example: null
                examples:
                    error:
                    summary: "Error response"
                    value:
                        success: false
                        message: "User not found"
                        data: null
        "500":
            description: Something went wrong
            content:
                application/json:
                schema:
                    type: object
                    properties:
                    success:
                        type: boolean
                        description: "Boolean indicating if the request was successful"
                        example: false
                    message:
                        type: string
                        description: "Message returned from the request"
                        example: "Something went wrong"
                    data:
                        type: object
                        description: "Data returned from the request"
                        example: null
                examples:
                    error:
                    summary: "Error"
                    value:
                        success: false
                        message: "Something went wrong"
                        data: null


  /users:
    get:
      tags:
        - User
      summary: Get all users
      description: Retrieve all users
      operationId: getAllUsers
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            format: int64
          description: The limit for the max amount of accounts
        - in: query
          name: offset
          schema:
            type: integer
            format: int64
          description: The offset for the amount of accounts
      responses:
        "200":
          description: Users retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: "Boolean indicating if the request was successful"
                    example: true
                  message:
                    type: string
                    description: "Message returned from the request"
                    example: "User successfully deleted"
              examples:
                success:
                  summary: "Successful response"
                  value:
                    success: true
                    message: "User(s) successfully retrieved"
                    data:
                      type: object
                      description: "Data returned from the request"
                      example:
                        user:
                          - id: 1
                            firstName: "John"
                            lastName: "Doe"
                            username: "JohnDoe"
                            email: "johnDoe@gmail.com"
                            userType: "USER"
                error:
                  summary: "Error response"
                  value:
                    success: false
                    message: "Invalid request parameters"
                    data: null
        "401":
          description: You are unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: "Boolean indicating if the request was successful"
                    example: false
                  message:
                    type: string
                    description: "Message returned from the request"
                    example: "Unauthorized"
                  data:
                    type: object
                    description: "Data returned from the request"
                    example: null
              examples:
                error:
                  summary: "Error response"
                  value:
                    success: false
                    message: "Unauthorized"
                    data: null
        "409":
          description: Something went wrong
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: "Boolean indicating if the request was successful"
                    example: false
                  message:
                    type: string
                    description: "Message returned from the request"
                    example: "Something went wrong"
                  data:
                    type: object
                    description: "Data returned from the request"
                    example: null
              examples:
                error:
                  summary: "Error"
                  value:
                    success: false
                    message: "Something went wrong"
                    data: null
    post:
      tags:
        - User
      summary: Create a new user or login
      description: Create a new user or login
      parameters:
        - in: query
          name: login
          schema:
            type: boolean
          description: If true, the user will be logged in
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRequest"
      responses:
        "201":
          description: Account added
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: "Boolean indicating if the request was successful"
                    example: true
                  message:
                    type: string
                    description: "Message returned from the request"
                    example: "User successfully added"
              examples:
                success:
                  summary: "Successful response"
                  value:
                    success: true
                    message: "Data retrieved successfully"
                    data:
                      type: object
                      description: "Data returned from the request"
                      example:
                        user:
                          - id: 1
                            firstName: "John"
                            lastName: "Doe"
                            username: "JohnDoe"
                            email: "johnDoe@gmail.com"
                            userType: "USER"
                error:
                  summary: "Error response"
                  value:
                    success: false
                    message: "Invalid request parameters"
                    data: null
        "401":
          description: You are unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: "Boolean indicating if the request was successful"
                    example: false
                  message:
                    type: string
                    description: "Message returned from the request"
                    example: "Unauthorized"
                  data:
                    type: object
                    description: "Data returned from the request"
                    example: null
              examples:
                error:
                  summary: "Error response"
                  value:
                    success: false
                    message: "Unauthorized"
                    data: null
        "409":
          description: Something went wrong
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: "Boolean indicating if the request was successful"
                    example: false
                  message:
                    type: string
                    description: "Message returned from the request"
                    example: "Something went wrong"
                  data:
                    type: object
                    description: "Data returned from the request"
                    example: null
              examples:
                error:
                  summary: "Error"
                  value:
                    success: false
                    message: "Something went wrong"
                    data: null
  /users/{user_id}:
    get:
      tags:
        - User
      summary: Get user by id
      description: Retrieve a user by id
      operationId: getUserById
      parameters:
        - name: user_id
          in: path
          description: "The id that needs to be fetched. Use 1 for testing. "
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Account deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: "Boolean indicating if the request was successful"
                    example: true
                  message:
                    type: string
                    description: "Message returned from the request"
                    example: "User successfully deleted"
              examples:
                success:
                  summary: "Successful response"
                  value:
                    success: true
                    message: "User successfully retrieved"
                    data:
                      type: object
                      description: "Data returned from the request"
                      example:
                        user:
                          - id: 1
                            firstName: "John"
                            lastName: "Doe"
                            username: "JohnDoe"
                            email: "johnDoe@gmail.com"
                            userType: "USER"
                error:
                  summary: "Error response"
                  value:
                    success: false
                    message: "Invalid request parameters"
                    data: null
        "401":
          description: You are unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: "Boolean indicating if the request was successful"
                    example: false
                  message:
                    type: string
                    description: "Message returned from the request"
                    example: "Unauthorized"
                  data:
                    type: object
                    description: "Data returned from the request"
                    example: null
              examples:
                error:
                  summary: "Error response"
                  value:
                    success: false
                    message: "Unauthorized"
                    data: null
        "409":
          description: Something went wrong
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: "Boolean indicating if the request was successful"
                    example: false
                  message:
                    type: string
                    description: "Message returned from the request"
                    example: "Something went wrong"
                  data:
                    type: object
                    description: "Data returned from the request"
                    example: null
              examples:
                error:
                  summary: "Error"
                  value:
                    success: false
                    message: "Something went wrong"
                    data: null
    put:
      tags:
        - User
      summary: Update user
      description: Update user
      operationId: updateUser
      parameters:
        - name: user_id
          in: path
          description: "The id that needs to be fetched. Use 1 for testing. "
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserResponse"
      responses:
        "200":
          description: Account Updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: "Boolean indicating if the request was successful"
                    example: true
                  message:
                    type: string
                    description: "Message returned from the request"
                    example: "User successfully updated"
              examples:
                success:
                  summary: "Successful response"
                  value:
                    success: true
                    message: "User successfully deleted"
                    data:
                      type: object
                      description: "Data returned from the request"
                      example:
                        user:
                          - id: 1
                            firstName: "John"
                            lastName: "Doe"
                            username: "JohnDoe"
                            email: "johnDoe@gmail.com"
                            userType: "USER"
                error:
                  summary: "Error response"
                  value:
                    success: false
                    message: "Invalid request parameters"
                    data: null
        "401":
          description: You are unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: "Boolean indicating if the request was successful"
                    example: false
                  message:
                    type: string
                    description: "Message returned from the request"
                    example: "Unauthorized"
                  data:
                    type: object
                    description: "Data returned from the request"
                    example: null
              examples:
                error:
                  summary: "Error response"
                  value:
                    success: false
                    message: "Unauthorized"
                    data: null
        "409":
          description: Something went wrong
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: "Boolean indicating if the request was successful"
                    example: false
                  message:
                    type: string
                    description: "Message returned from the request"
                    example: "Something went wrong"
                  data:
                    type: object
                    description: "Data returned from the request"
                    example: null
              examples:
                error:
                  summary: "Error"
                  value:
                    success: false
                    message: "Something went wrong"
                    data: null
    delete:
      tags:
        - User
      summary: Delete user
      description: Delete user
      operationId: deleteUser
      parameters:
        - name: user_id
          in: path
          description: "The id that needs to be fetched. Use 1 for testing. "
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: User deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: "Boolean indicating if the request was successful"
                    example: true
                  message:
                    type: string
                    description: "Message returned from the request"
                    example: "User successfully deleted"
              examples:
                success:
                  summary: "Successful response"
                  value:
                    success: true
                    message: "User successfully deleted"
                    data: null
                error:
                  summary: "Error response"
                  value:
                    success: false
                    message: "Invalid request parameters"
                    data: null
        "401":
          description: You are unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: "Boolean indicating if the request was successful"
                    example: false
                  message:
                    type: string
                    description: "Message returned from the request"
                    example: "Unauthorized"
                  data:
                    type: object
                    description: "Data returned from the request"
                    example: null
              examples:
                error:
                  summary: "Error response"
                  value:
                    success: false
                    message: "Unauthorized"
                    data: null
        "409":
          description: Something went wrong
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: "Boolean indicating if the request was successful"
                    example: false
                  message:
                    type: string
                    description: "Message returned from the request"
                    example: "Something went wrong"
                  data:
                    type: object
                    description: "Data returned from the request"
                    example: null
              examples:
                error:
                  summary: "Error"
                  value:
                    success: false
                    message: "Something went wrong"
                    data: null
  /accounts:
    get:
      tags:
        - Employee
        - Account
        - Customer
      summary: Get all accounts
      description: this retrieves all the accounts if user is employee, otherwise only the accounts of the user
      operationId: getAllAccounts
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            format: int64
          description: The limit for the max amount of accounts
        - in: query
          name: offset
          schema:
            type: integer
            format: int64
          description: The offset for the amount of accounts
        - in: query
          name: search
          schema:
            type: string
          description: Search
      responses:
        "200":
          description: Accounts retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: "Boolean indicating if the request was successful"
                    example: true
                  message:
                    type: string
                    description: "Message returned from the request"
                    example: "Account(s) successfully retrieved"
              examples:
                success:
                  summary: "Successful response"
                  value:
                    success: true
                    message: "Data retrieved successfully"
                    data:
                      type: object
                      description: "Data returned from the request"
                      example:
                        account:
                          - userId: 1
                            iban: "NL61-INHO-0897-9124-92"
                            name: "account name"
                            dailyLimit: 100.0
                            transactionLimit: 500.0
                            absoluteLimit: 0.0
                            balance: 1000.0
                            isSavings: false
                            isActive: true
                        accountLimitsLeft:
                          - dailyLimitLeft: 100.0
                            transactionLimit: 500.0
                            amountSpendableOnNextTransaction: 0.0
                            differenceBalanceAndAbsoluteLimit: 0.0
                error:
                  summary: "Error response"
                  value:
                    success: false
                    message: "Invalid request parameters"
                    data: null
        "401":
          description: You are unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: "Boolean indicating if the request was successful"
                    example: false
                  message:
                    type: string
                    description: "Message returned from the request"
                    example: "Unauthorized"
                  data:
                    type: object
                    description: "Data returned from the request"
                    example: null
              examples:
                error:
                  summary: "Error response"
                  value:
                    success: false
                    message: "Unauthorized"
                    data: null
    post:
      tags:
        - Employee
        - Customer
        - Account
      summary: Add new account
      description: Add a new account to an existing user
      operationId: addAccount
      responses:
        "200":
          description: Account added
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: "Boolean indicating if the request was successful"
                    example: true
                  message:
                    type: string
                    description: "Message returned from the request"
                    example: "Account successfully added"
              examples:
                success:
                  summary: "Successful response"
                  value:
                    success: true
                    message: "Data retrieved successfully"
                    data:
                      type: object
                      description: "Data returned from the request"
                      example:
                        account:
                          - userId: 1
                            iban: "NL61-INHO-0897-9124-92"
                            name: "account name"
                            dailyLimit: 100.0
                            transactionLimit: 500.0
                            absoluteLimit: 0.0
                            balance: 1000.0
                            isSavings: false
                            isActive: true
                        accountLimitsLeft:
                          - dailyLimitLeft: 100.0
                            transactionLimit: 500.0
                            amountSpendableOnNextTransaction: 0.0
                            differenceBalanceAndAbsoluteLimit: 0.0
                error:
                  summary: "Error response"
                  value:
                    success: false
                    message: "Invalid request parameters"
                    data: null
        "401":
          description: You are unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: "Boolean indicating if the request was successful"
                    example: false
                  message:
                    type: string
                    description: "Message returned from the request"
                    example: "Unauthorized"
                  data:
                    type: object
                    description: "Data returned from the request"
                    example: null
              examples:
                error:
                  summary: "Error response"
                  value:
                    success: false
                    message: "Unauthorized"
                    data: null
        "409":
          description: Something went wrong
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: "Boolean indicating if the request was successful"
                    example: false
                  message:
                    type: string
                    description: "Message returned from the request"
                    example: "Something went wrong"
                  data:
                    type: object
                    description: "Data returned from the request"
                    example: null
              examples:
                error:
                  summary: "Error"
                  value:
                    success: false
                    message: "Something went wrong"
                    data: null
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountRequest'
        description: Account to add
  /accounts/{accountId}:
    get:
      tags:
        - Employee
        - Customer
        - Account
      summary: Get account by id
      description: Get the account by a supplied id
      operationId: getAccountInfo
      parameters:
        - name: accountId
          in: path
          description: "The id that needs to be fetched. Use 1 for testing. "
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Account retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: "Boolean indicating if the request was successful"
                    example: true
                  message:
                    type: string
                    description: "Message returned from the request"
                    example: "Account successfully retrieved"
              examples:
                success:
                  summary: "Successful response"
                  value:
                    success: true
                    message: "Data retrieved successfully"
                    data:
                      type: object
                      description: "Data returned from the request"
                      example:
                        account:
                          - userId: 1
                            iban: "NL61-INHO-0897-9124-92"
                            name: "account name"
                            dailyLimit: 100.0
                            transactionLimit: 500.0
                            absoluteLimit: 0.0
                            balance: 1000.0
                            isSavings: false
                            isActive: true
                        accountLimitsLeft:
                          - dailyLimitLeft: 100.0
                            transactionLimit: 500.0
                            amountSpendableOnNextTransaction: 0.0
                            differenceBalanceAndAbsoluteLimit: 0.0
                error:
                  summary: "Error response"
                  value:
                    success: false
                    message: "Invalid request parameters"
                    data: null
        "401":
          description: You are unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: "Boolean indicating if the request was successful"
                    example: false
                  message:
                    type: string
                    description: "Message returned from the request"
                    example: "Unauthorized"
                  data:
                    type: object
                    description: "Data returned from the request"
                    example: null
              examples:
                error:
                  summary: "Error response"
                  value:
                    success: false
                    message: "Unauthorized"
                    data: null
    put:
      tags:
        - Employee
        - Customer
        - Account
      summary: Update account details
      description: Update the information of the account
      operationId: updateAccount
      parameters:
        - name: accountId
          in: path
          description: "The id that needs to be fetched. Use 1 for testing. "
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Account updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: "Boolean indicating if the request was successful"
                    example: true
                  message:
                    type: string
                    description: "Message returned from the request"
                    example: "Account successfully updated"
              examples:
                success:
                  summary: "Successful response"
                  value:
                    success: true
                    message: "Data retrieved successfully"
                    data:
                      type: object
                      description: "Data returned from the request"
                      example:
                        account:
                          - userId: 1
                            iban: "NL61-INHO-0897-9124-92"
                            name: "account name"
                            dailyLimit: 100.0
                            transactionLimit: 500.0
                            absoluteLimit: 0.0
                            balance: 1000.0
                            isSavings: false
                            isActive: true
                        accountLimitsLeft:
                          - dailyLimitLeft: 100.0
                            transactionLimit: 500.0
                            amountSpendableOnNextTransaction: 0.0
                            differenceBalanceAndAbsoluteLimit: 0.0
                error:
                  summary: "Error response"
                  value:
                    success: false
                    message: "Invalid request parameters"
                    data: null
        "401":
          description: You are unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: "Boolean indicating if the request was successful"
                    example: false
                  message:
                    type: string
                    description: "Message returned from the request"
                    example: "Unauthorized"
                  data:
                    type: object
                    description: "Data returned from the request"
                    example: null
              examples:
                error:
                  summary: "Error response"
                  value:
                    success: false
                    message: "Unauthorized"
                    data: null
        "409":
          description: Something went wrong
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: "Boolean indicating if the request was successful"
                    example: false
                  message:
                    type: string
                    description: "Message returned from the request"
                    example: "Something went wrong"
                  data:
                    type: object
                    description: "Data returned from the request"
                    example: null
              examples:
                error:
                  summary: "Error"
                  value:
                    success: false
                    message: "Something went wrong"
                    data: null
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiResponse"
        description: Account to update
    delete:
      tags:
        - Employee
        - Account
        - Customer
      summary: Delete account
      operationId: deleteAccount
      parameters:
        - name: accountId
          in: path
          description: "The id that needs to be fetched. Use 1 for testing. "
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Account deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: "Boolean indicating if the request was successful"
                    example: true
                  message:
                    type: string
                    description: "Message returned from the request"
                    example: "Account successfully deleted"
              examples:
                success:
                  summary: "Successful response"
                  value:
                    success: true
                    message: "Account successfully deleted"
                    data: null
                error:
                  summary: "Error response"
                  value:
                    success: false
                    message: "Invalid request parameters"
                    data: null
        "401":
          description: You are unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: "Boolean indicating if the request was successful"
                    example: false
                  message:
                    type: string
                    description: "Message returned from the request"
                    example: "Unauthorized"
                  data:
                    type: object
                    description: "Data returned from the request"
                    example: null
              examples:
                error:
                  summary: "Error response"
                  value:
                    success: false
                    message: "Unauthorized"
                    data: null
        "409":
          description: Something went wrong
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: "Boolean indicating if the request was successful"
                    example: false
                  message:
                    type: string
                    description: "Message returned from the request"
                    example: "Something went wrong"
                  data:
                    type: object
                    description: "Data returned from the request"
                    example: null
              examples:
                error:
                  summary: "Error"
                  value:
                    success: false
                    message: "Something went wrong"
                    data: null
  /accounts/user/{userId}:
    get:
      tags:
        - Account
        - Employee
      summary: Get all accounts for a user
      description: Retrieve all accounts for a user
      parameters:
        - name: userId
          in: path
          description: "The id that needs to be fetched. Use 1 for testing. "
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Accounts retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: "Boolean indicating if the request was successful"
                    example: true
                  message:
                    type: string
                    description: "Message returned from the request"
                    example: "Data retrieved successfully"
                  data:
                    type: object
                    description: "Data returned from the request"
                    example:
                      accounts:
                        - userId: 1
                          iban: "NL61-INHO-0897-9124-92"
                          name: "account name"
                          dailyLimit: 100.0
                          transactionLimit: 500.0
                          absoluteLimit: 0.0
                          balance: 1000.0
                          isSavings: false
                          isActive: true
                      accountLimitsLeft:
                        - dailyLimitLeft: 100.0
                          transactionLimit: 500.0
                          amountSpendableOnNextTransaction: 0.0
                          differenceBalanceAndAbsoluteLimit: 0.0
              examples:
                success:
                  summary: "Successful response"
                  value:
                    success: true
                    message: "Data retrieved successfully"
                    data:
                      type: object
                      description: "Data returned from the request"
                      example:
                        accounts:
                          - userId: 1
                            iban: "NL61-INHO-0897-9124-92"
                            name: "account name"
                            dailyLimit: 100.0
                            transactionLimit: 500.0
                            absoluteLimit: 0.0
                            balance: 1000.0
                            isSavings: false
                            isActive: true
                        accountLimitsLeft:
                          - dailyLimitLeft: 100.0
                            transactionLimit: 500.0
                            amountSpendableOnNextTransaction: 0.0
                            differenceBalanceAndAbsoluteLimit:
  /transactions:
    get:
      tags:
        - Transaction
      summary: Get all transactions
      description: Retrieve all transactions for all accounts
      parameters:
        - in: query
          name: from_date
          schema:
            type: string
            format: date-time
          description: The from date to filter transactions
        - in: query
          name: to_date
          schema:
            type: string
            format: date-time
          description: The to date to filter transactions
        - in: query
          name: iban
          schema:
            type: string
          description: The IBAN to search for
        - in: query
          name: transaction_type_id
          schema:
            type: integer
            format: int64
          description: The transaction_type_id to filter transactions for
        - in: query
          name: balance_relation
          schema:
            type: string
          description: The relation to the balance filter
        - in: query
          name: balance
          schema:
            type: number
          description: The balance to filter for
        - in: query
          name: page_number
          schema:
            type: integer
            format: int64
          description: The page number for the pagination
        - in: query
          name: page_size
          schema:
            type: integer
            format: int64
          description: The size for the pagination
      responses:
        "200":
          description: The requested transactions
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: "Boolean indicating if the request was successful"
                    example: true
                  message:
                    type: string
                    description: "Message returned from the request"
                    example: "Data retrieved successfully"
                  data:
                    type: object
                    description: "Data returned from the request"
                    example:
                      transactions:
                        - id: 1
                          account_id: 1
                          transaction_type_id: 1
                          amount: 100.0
                          balance: 500.0
                          description: "Payment received"
                          created_at: "2022-01-01T00:00:00Z"
                        - id: 2
                          account_id: 2
                          transaction_type_id: 2
                          amount: -50.0
                          balance: 450.0
                          description: "Payment sent"
                          created_at: "2022-01-02T00:00:00Z"
              examples:
                success:
                  summary: "Successful response"
                  value:
                    success: true
                    message: "Data retrieved successfully"
                    data:
                      transactions:
                        - id: 1
                          account_id: 1
                          transaction_type_id: 1
                          amount: 100.0
                          balance: 500.0
                          description: "Payment received"
                          created_at: "2022-01-01T00:00:00Z"
                        - id: 2
                          account_id: 2
                          transaction_type_id: 2
                          amount: -50.0
                          balance: 450.0
                          description: "Payment sent"
                          created_at: "2022-01-02T00:00:00Z"
                error:
                  summary: "Error response"
                  value:
                    success: false
                    message: "Invalid request parameters"
                    data: null
        "401":
          description: You are unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: "Boolean indicating if the request was successful"
                    example: false
                  message:
                    type: string
                    description: "Message returned from the request"
                    example: "Unauthorized"
                  data:
                    type: object
                    description: "Data returned from the request"
                    example: null
              examples:
                success:
                  summary: "Successful response"
                  value:
                    success: false
                    message: "Unauthorized"
                    data: null
        "409":
          description: Something went wrong
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: "Boolean indicating if the request was successful"
                    example: false
                  message:
                    type: string
                    description: "Message returned from the request"
                    example: "Something went wrong"
                  data:
                    type: object
                    description: "Data returned from the request"
                    example: null
              examples:
                success:
                  summary: "Successful response"
                  value:
                    success: false
                    message: "Something went wrong"
                    data: null
    post:
      tags:
        - Transaction
      summary: Create a transaction
      description: Create a transaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransactionRequest"
      responses:
        "200":
          description: The transaction was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: "Boolean indicating if the request was successful"
                    example: true
                  message:
                    type: string
                    description: "Message returned from the request"
                    example: "Transaction created successfully"
                  data:
                    type: object
                    description: "Data returned from the request"
                    example:
                      transaction:
                        id: 1
                        account_id: 1
                        transaction_type_id: 1
                        amount: 100.0
                        balance: 500.0
                        description: "Payment received"
                        created_at: "2022-01-01T00:00:00Z"
              examples:
                success:
                  summary: "Successful response"
                  value:
                    success: true
                    message: "Transaction created successfully"
                    data:
                      transaction:
                        id: 1
                        account_id: 1
                        transaction_type_id: 1
                        amount: 100.0
                        balance: 500.0
                        description: "Payment received"
                        created_at: "2022-01-01T00:00:00Z"
                error:
                  summary: "Error response"
                  value:
                    success: false
                    message: "Invalid request parameters"
                    data: null
        "401":
          description: You are unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: "Boolean indicating if the request was successful"
                    example: false
                  message:
                    type: string
                    description: "Message returned from the request"
                    example: "Unauthorized"
                  data:
                    type: object
                    description: "Data returned from the request"
                    example: null
              examples:
                success:
                  summary: "Successful response"
                  value:
                    success: false
                    message: "Unauthorized"
                    data: null
        "409":
          description: Something went wrong
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: "Boolean indicating if the request was successful"
                    example: false
                  message:
                    type: string
                    description: "Message returned from the request"
                    example: "Something went wrong"
                  data:
                    type: object
                    description: "Data returned from the request"
                    example: null
              examples:
                success:
                  summary: "Successful response"
                  value:
                    success: false
                    message: "Something went wrong"
                    data: null
        "400":
          description: Bad input parameter
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
  /transactions/{id}:
    get:
      tags:
        - Transaction
      summary: Retrieve a specific transaction
      description: Retrieve a specific transaction by ID
      parameters:
        - name: id
          in: path
          description: "The ID of the transaction to retrieve"
          required: true
          schema:
            type: integer
            format: int64
          example: 1
      responses:
        "200":
          description: The requested transaction
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionResponse"
              examples:
                success:
                  summary: "Successful response"
                  value:
                    id: 1
                    account_id: 1
                    transaction_type_id: 1
                    amount: 100.0
                    balance: 500.0
                    description: "Payment received"
                    created_at: "2022-01-01T00:00:00Z"
                error:
                  summary: "Error response"
                  value:
                    success: false
                    message: "Invalid request parameters"
                    data: null
        "401":
          description: You are unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
              examples:
                success:
                  summary: "Successful response"
                  value:
                    success: false
                    message: "Unauthorized"
                    data: null
        "409":
          description: Something went wrong
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
              examples:
                success:
                  summary: "Successful response"
                  value:
                    success: false
                    message: "Something went wrong"
                    data: null
  /transactions/accounts/{iban}:
    get:
      tags:
        - Transaction
      summary: Retrieve all transactions for an account
      description: Retrieve all transactions for an account by IBAN
      parameters:
        - name: iban
          in: path
          description: "The IBAN of the account to retrieve transactions for"
          required: true
          schema:
            type: string
          example: "NL61-INHO-0897-9124-90"
      responses:
        "200":
          description: The requested transactions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TransactionResponse"
              examples:
                success:
                  summary: "Successful response"
                  value:
                    - id: 1
                      account_id: 1
                      transaction_type_id: 1
                      amount: 100.0
                      balance: 500.0
                      description: "Payment received"
                      created_at: "2022-01-01T00:00:00Z"
                    - id: 2
                      account_id: 1
                      transaction_type_id: 2
                      amount: -50.0
                      balance: 450.0
                      description: "Groceries"
                      created_at: "2022-01-02T00:00:00Z"
                error:
                  summary: "Error response"
                  value:
                    success: false
                    message: "Invalid request parameters"
                    data: null
        "401":
          description: You are unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
              examples:
                success:
                  summary: "Successful response"
                  value:
                    success: false
                    message: "Unauthorized"
                    data: null
        "409":
          description: Something went wrong
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
              examples:
                success:
                  summary: "Successful response"
                  value:
                    success: false
                    message: "Something went wrong"
                    data: null
components:
  schemas:
    UserResponse:
      type: object
      required:
        - id
        - first_name
        - last_name
        - username
        - email
        - user_type_id
        - created_at
      properties:
        id:
          type: integer
          format: int64
          example: 1
        first_name:
          type: string
          example: Luke
        last_name:
          type: string
          example: Huisman
        username:
          type: string
          example: luke
        email:
          type: string
          example: 684651@student.inholland.nl
        user_type_id:
          type: integer
          format: int64
          example: 1
        created_at:
          type: string
          format: date-time
          example: "2019-10-10T12:00:00Z"
    UserRequest:
      type: object
      required:
        - first_name
        - last_name
        - username
        - password
        - email
        - user_type_id
      properties:
        id:
          type: integer
          format: int64
          example: 1
        first_name:
          type: string
          example: Luke
        last_name:
          type: string
          example: Huisman
        username:
          type: string
          example: luke
        password:
          type: string
          example: password
        email:
          type: string
          example: 684651@student.inholland.nl
        user_type_id:
          type: integer
          format: int64
          example: 1
        created_at:
          type: string
          format: date-time
          example: "2019-10-10T12:00:00Z"
    TransactionResponse:
      type: object
      required:
        - id
        - fromAccountIban
        - toIban
        - amount
        - transactionType
        - label
        - description
        - createdAt
      properties:
        id:
          type: integer
          format: int64
          example: 1
        fromAccountIban:
          type: string
          example: "MRBANKIE-4132-6745-3452"
        toIban:
          type: string
          example: "MRBANKIE-4132-6745-3452"
        amount:
          type: number
          example: 20.00
        transactionType:
          type: string
          example: "WITHDRAW"
        label:
          type: string
          example: "Hema"
        description:
          type: string
          example: "Betaling voor broodje kaas"
        createdAt:
          type: string
          format: date-time
          example: "2023-08-29T09:12:33.001Z"
    TransactionRequest:
      type: object
      required:
        - amount
        - transactionType
        - label
        - description
      properties:
        fromAccountIban:
          type: string
          example: "MRBANKIE-4132-6745-3452"
        toIban:
          type: string
          example: "MRBANKIE-4132-6745-3452"
        amount:
          type: number
          example: 20.00
        transactionType:
          type: string
          example: "WITHDRAW"
        label:
          type: string
          example: "Hema"
        description:
          type: string
          example: "Betaling voor broodje kaas"
    AccountResponse:
      type: object
      required:
        - userId
        - iban
        - name
        - dailyLimit
        - transactionLimit
        - absoluteLimit
        - balance
        - isSavings
        - isActive
        - createdAt
      properties:
        id:
          type: integer
          example: 435
        user_id:
          type: integer
          example: 3457
        iban_number:
          type: string
          example: "NL96-INHO-0875-9496-09"
        account_name:
          type: string
          example: "Saving for car"
        daily_limit:
          type: number
          example: 1200
        transaction_limit:
          type: number
          example: 1500
        absolute_limit:
          type: number
          example: 2000
        account_type_id:
          type: integer
          example: 2
        created_at:
          type: string
          example: "2019-06-22T03:12:35.001Z"
        balance:
          type: number
          example: 40000
        is_active:
          type: boolean
          example: true
    AccountRequest:
      type: object
      required:
        - userId
        - iban
        - name
        - dailyLimit
        - transactionLimit
        - absoluteLimit
        - balance
        - isSavings
        - isActive
      properties:
        id:
          type: integer
          example: 435
        userId:
          type: integer
          example: 3457
        iban:
          type: string
          example: "MRBANKIE-4132-6745-3452"
        account_name:
          type: string
          example: "Saving for car"
        daily_limit:
          type: number
          example: 1200
        transaction_limit:
          type: number
          example: 1500
        absolute_limit:
          type: number
          example: 2000
        account_type_id:
          type: integer
          example: 2
        created_at:
          type: string
          example: "2019-06-22T03:12:35.001Z"
        balance:
          type: number
          example: 40000
        is_active:
          type: boolean
          example: true
    AccountData:
      type: object
      required:
        - account
        - accountLimitsLeft
      properties:
        account:
          $ref: '#/components/schemas/ApiResponse'
        accountLimitsLeft:
          $ref: '#/components/schemas/AccountLimitsLeft'
    AccountLimitsLeft:
      type: object
      required:
        - dailyLimitLeft
        - transactionLimit
        - amountSpendableOnNextTransaction
        - differenceBalanceAndAbsoluteLimit
      properties:
        dailyLimitLeft:
          type: number
          example: 1200
        transactionLimit:
          type: number
          example: 1500
        amountSpendableOnNextTransaction:
          type: number
          example: 2000
        differenceBalanceAndAbsoluteLimit:
          type: number
          example: 40000
    LoginRequest:
      type: object
      properties:
        username:
          type: string
          example: "john"
        password:
          type: string
          example: "secret"
      required:
        - username
        - password
    LoginResponse:
      type: object
      properties:
        token:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9"
        user:
          type: object
    ApiResponse:
      type: object
      required:
        - success
        - message
      properties:
        success:
          type: boolean
          description: "Boolean indicating if the request was successful"
          example: true
        message:
          type: string
          description: "Message returned from the request"
          example: "Account created successfully"
        data:
          type: object
          description: "Data returned from the request"
          example:
            success: true
            message: "Data retrieved successfully"
            data: object
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT